// Code generated by protoc-gen-grpchan. DO NOT EDIT.
// source: rapid.proto

package remoting

import (
	"github.com/fullstorydev/grpchan"
	"golang.org/x/net/context"
	"google.golang.org/grpc"
)

func RegisterHandlerMembershipService(reg grpchan.ServiceRegistry, srv MembershipServiceServer) {
	reg.RegisterService(&_MembershipService_serviceDesc, srv)
}

type membershipServiceChannelClient struct {
	ch grpchan.Channel
}

func NewMembershipServiceChannelClient(ch grpchan.Channel) MembershipServiceClient {
	return &membershipServiceChannelClient{ch: ch}
}

func (c *membershipServiceChannelClient) SendRequest(ctx context.Context, in *RapidRequest, opts ...grpc.CallOption) (*RapidResponse, error) {
	out := new(RapidResponse)
	err := c.ch.Invoke(ctx, "/remoting.MembershipService/sendRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}
