// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.12.0
// source: rapid.proto

package remoting

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type JoinStatusCode int32

const (
	JoinStatusCode_HOSTNAME_ALREADY_IN_RING JoinStatusCode = 0
	JoinStatusCode_UUID_ALREADY_IN_RING     JoinStatusCode = 1
	JoinStatusCode_SAFE_TO_JOIN             JoinStatusCode = 2
	JoinStatusCode_CONFIG_CHANGED           JoinStatusCode = 3
	JoinStatusCode_MEMBERSHIP_REJECTED      JoinStatusCode = 4
)

// Enum value maps for JoinStatusCode.
var (
	JoinStatusCode_name = map[int32]string{
		0: "HOSTNAME_ALREADY_IN_RING",
		1: "UUID_ALREADY_IN_RING",
		2: "SAFE_TO_JOIN",
		3: "CONFIG_CHANGED",
		4: "MEMBERSHIP_REJECTED",
	}
	JoinStatusCode_value = map[string]int32{
		"HOSTNAME_ALREADY_IN_RING": 0,
		"UUID_ALREADY_IN_RING":     1,
		"SAFE_TO_JOIN":             2,
		"CONFIG_CHANGED":           3,
		"MEMBERSHIP_REJECTED":      4,
	}
)

func (x JoinStatusCode) Enum() *JoinStatusCode {
	p := new(JoinStatusCode)
	*p = x
	return p
}

func (x JoinStatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinStatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_rapid_proto_enumTypes[0].Descriptor()
}

func (JoinStatusCode) Type() protoreflect.EnumType {
	return &file_rapid_proto_enumTypes[0]
}

func (x JoinStatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinStatusCode.Descriptor instead.
func (JoinStatusCode) EnumDescriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{0}
}

type EdgeStatus int32

const (
	EdgeStatus_UP   EdgeStatus = 0
	EdgeStatus_DOWN EdgeStatus = 1
)

// Enum value maps for EdgeStatus.
var (
	EdgeStatus_name = map[int32]string{
		0: "UP",
		1: "DOWN",
	}
	EdgeStatus_value = map[string]int32{
		"UP":   0,
		"DOWN": 1,
	}
)

func (x EdgeStatus) Enum() *EdgeStatus {
	p := new(EdgeStatus)
	*p = x
	return p
}

func (x EdgeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EdgeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_rapid_proto_enumTypes[1].Descriptor()
}

func (EdgeStatus) Type() protoreflect.EnumType {
	return &file_rapid_proto_enumTypes[1]
}

func (x EdgeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EdgeStatus.Descriptor instead.
func (EdgeStatus) EnumDescriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{1}
}

type NodeStatus int32

const (
	NodeStatus_OK            NodeStatus = 0 // this is the default value
	NodeStatus_BOOTSTRAPPING NodeStatus = 1
)

// Enum value maps for NodeStatus.
var (
	NodeStatus_name = map[int32]string{
		0: "OK",
		1: "BOOTSTRAPPING",
	}
	NodeStatus_value = map[string]int32{
		"OK":            0,
		"BOOTSTRAPPING": 1,
	}
)

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}

func (x NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_rapid_proto_enumTypes[2].Descriptor()
}

func (NodeStatus) Type() protoreflect.EnumType {
	return &file_rapid_proto_enumTypes[2]
}

func (x NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus.Descriptor instead.
func (NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{2}
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname []byte `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Port     int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{0}
}

func (x *Endpoint) GetHostname() []byte {
	if x != nil {
		return x.Hostname
	}
	return nil
}

func (x *Endpoint) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// All-in-one message type.
type RapidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*RapidRequest_PreJoinMessage
	//	*RapidRequest_JoinMessage
	//	*RapidRequest_BatchedAlertMessage
	//	*RapidRequest_ProbeMessage
	//	*RapidRequest_FastRoundPhase2BMessage
	//	*RapidRequest_Phase1AMessage
	//	*RapidRequest_Phase1BMessage
	//	*RapidRequest_Phase2AMessage
	//	*RapidRequest_Phase2BMessage
	//	*RapidRequest_LeaveMessage
	Content isRapidRequest_Content `protobuf_oneof:"content"`
}

func (x *RapidRequest) Reset() {
	*x = RapidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RapidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RapidRequest) ProtoMessage() {}

func (x *RapidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RapidRequest.ProtoReflect.Descriptor instead.
func (*RapidRequest) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{1}
}

func (m *RapidRequest) GetContent() isRapidRequest_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *RapidRequest) GetPreJoinMessage() *PreJoinMessage {
	if x, ok := x.GetContent().(*RapidRequest_PreJoinMessage); ok {
		return x.PreJoinMessage
	}
	return nil
}

func (x *RapidRequest) GetJoinMessage() *JoinMessage {
	if x, ok := x.GetContent().(*RapidRequest_JoinMessage); ok {
		return x.JoinMessage
	}
	return nil
}

func (x *RapidRequest) GetBatchedAlertMessage() *BatchedAlertMessage {
	if x, ok := x.GetContent().(*RapidRequest_BatchedAlertMessage); ok {
		return x.BatchedAlertMessage
	}
	return nil
}

func (x *RapidRequest) GetProbeMessage() *ProbeMessage {
	if x, ok := x.GetContent().(*RapidRequest_ProbeMessage); ok {
		return x.ProbeMessage
	}
	return nil
}

func (x *RapidRequest) GetFastRoundPhase2BMessage() *FastRoundPhase2BMessage {
	if x, ok := x.GetContent().(*RapidRequest_FastRoundPhase2BMessage); ok {
		return x.FastRoundPhase2BMessage
	}
	return nil
}

func (x *RapidRequest) GetPhase1AMessage() *Phase1AMessage {
	if x, ok := x.GetContent().(*RapidRequest_Phase1AMessage); ok {
		return x.Phase1AMessage
	}
	return nil
}

func (x *RapidRequest) GetPhase1BMessage() *Phase1BMessage {
	if x, ok := x.GetContent().(*RapidRequest_Phase1BMessage); ok {
		return x.Phase1BMessage
	}
	return nil
}

func (x *RapidRequest) GetPhase2AMessage() *Phase2AMessage {
	if x, ok := x.GetContent().(*RapidRequest_Phase2AMessage); ok {
		return x.Phase2AMessage
	}
	return nil
}

func (x *RapidRequest) GetPhase2BMessage() *Phase2BMessage {
	if x, ok := x.GetContent().(*RapidRequest_Phase2BMessage); ok {
		return x.Phase2BMessage
	}
	return nil
}

func (x *RapidRequest) GetLeaveMessage() *LeaveMessage {
	if x, ok := x.GetContent().(*RapidRequest_LeaveMessage); ok {
		return x.LeaveMessage
	}
	return nil
}

type isRapidRequest_Content interface {
	isRapidRequest_Content()
}

type RapidRequest_PreJoinMessage struct {
	PreJoinMessage *PreJoinMessage `protobuf:"bytes,1,opt,name=preJoinMessage,proto3,oneof"`
}

type RapidRequest_JoinMessage struct {
	JoinMessage *JoinMessage `protobuf:"bytes,2,opt,name=joinMessage,proto3,oneof"`
}

type RapidRequest_BatchedAlertMessage struct {
	BatchedAlertMessage *BatchedAlertMessage `protobuf:"bytes,3,opt,name=batchedAlertMessage,proto3,oneof"`
}

type RapidRequest_ProbeMessage struct {
	ProbeMessage *ProbeMessage `protobuf:"bytes,4,opt,name=probeMessage,proto3,oneof"`
}

type RapidRequest_FastRoundPhase2BMessage struct {
	FastRoundPhase2BMessage *FastRoundPhase2BMessage `protobuf:"bytes,5,opt,name=fastRoundPhase2bMessage,proto3,oneof"`
}

type RapidRequest_Phase1AMessage struct {
	Phase1AMessage *Phase1AMessage `protobuf:"bytes,6,opt,name=phase1aMessage,proto3,oneof"`
}

type RapidRequest_Phase1BMessage struct {
	Phase1BMessage *Phase1BMessage `protobuf:"bytes,7,opt,name=phase1bMessage,proto3,oneof"`
}

type RapidRequest_Phase2AMessage struct {
	Phase2AMessage *Phase2AMessage `protobuf:"bytes,8,opt,name=phase2aMessage,proto3,oneof"`
}

type RapidRequest_Phase2BMessage struct {
	Phase2BMessage *Phase2BMessage `protobuf:"bytes,9,opt,name=phase2bMessage,proto3,oneof"`
}

type RapidRequest_LeaveMessage struct {
	LeaveMessage *LeaveMessage `protobuf:"bytes,10,opt,name=leaveMessage,proto3,oneof"`
}

func (*RapidRequest_PreJoinMessage) isRapidRequest_Content() {}

func (*RapidRequest_JoinMessage) isRapidRequest_Content() {}

func (*RapidRequest_BatchedAlertMessage) isRapidRequest_Content() {}

func (*RapidRequest_ProbeMessage) isRapidRequest_Content() {}

func (*RapidRequest_FastRoundPhase2BMessage) isRapidRequest_Content() {}

func (*RapidRequest_Phase1AMessage) isRapidRequest_Content() {}

func (*RapidRequest_Phase1BMessage) isRapidRequest_Content() {}

func (*RapidRequest_Phase2AMessage) isRapidRequest_Content() {}

func (*RapidRequest_Phase2BMessage) isRapidRequest_Content() {}

func (*RapidRequest_LeaveMessage) isRapidRequest_Content() {}

type RapidResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*RapidResponse_JoinResponse
	//	*RapidResponse_Response
	//	*RapidResponse_ConsensusResponse
	//	*RapidResponse_ProbeResponse
	Content isRapidResponse_Content `protobuf_oneof:"content"`
}

func (x *RapidResponse) Reset() {
	*x = RapidResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RapidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RapidResponse) ProtoMessage() {}

func (x *RapidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RapidResponse.ProtoReflect.Descriptor instead.
func (*RapidResponse) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{2}
}

func (m *RapidResponse) GetContent() isRapidResponse_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *RapidResponse) GetJoinResponse() *JoinResponse {
	if x, ok := x.GetContent().(*RapidResponse_JoinResponse); ok {
		return x.JoinResponse
	}
	return nil
}

func (x *RapidResponse) GetResponse() *Response {
	if x, ok := x.GetContent().(*RapidResponse_Response); ok {
		return x.Response
	}
	return nil
}

func (x *RapidResponse) GetConsensusResponse() *ConsensusResponse {
	if x, ok := x.GetContent().(*RapidResponse_ConsensusResponse); ok {
		return x.ConsensusResponse
	}
	return nil
}

func (x *RapidResponse) GetProbeResponse() *ProbeResponse {
	if x, ok := x.GetContent().(*RapidResponse_ProbeResponse); ok {
		return x.ProbeResponse
	}
	return nil
}

type isRapidResponse_Content interface {
	isRapidResponse_Content()
}

type RapidResponse_JoinResponse struct {
	JoinResponse *JoinResponse `protobuf:"bytes,1,opt,name=joinResponse,proto3,oneof"`
}

type RapidResponse_Response struct {
	Response *Response `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

type RapidResponse_ConsensusResponse struct {
	ConsensusResponse *ConsensusResponse `protobuf:"bytes,3,opt,name=consensusResponse,proto3,oneof"`
}

type RapidResponse_ProbeResponse struct {
	ProbeResponse *ProbeResponse `protobuf:"bytes,4,opt,name=probeResponse,proto3,oneof"`
}

func (*RapidResponse_JoinResponse) isRapidResponse_Content() {}

func (*RapidResponse_Response) isRapidResponse_Content() {}

func (*RapidResponse_ConsensusResponse) isRapidResponse_Content() {}

func (*RapidResponse_ProbeResponse) isRapidResponse_Content() {}

type NodeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	High int64 `protobuf:"varint,1,opt,name=high,proto3" json:"high,omitempty"`
	Low  int64 `protobuf:"varint,2,opt,name=low,proto3" json:"low,omitempty"`
}

func (x *NodeId) Reset() {
	*x = NodeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeId) ProtoMessage() {}

func (x *NodeId) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeId.ProtoReflect.Descriptor instead.
func (*NodeId) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{3}
}

func (x *NodeId) GetHigh() int64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *NodeId) GetLow() int64 {
	if x != nil {
		return x.Low
	}
	return 0
}

// TODO: JoinMessage and JoinResponse are overloaded because they are being used for phase 1 and 2 of the bootstrap.
type PreJoinMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          *Endpoint `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	NodeId          *NodeId   `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	RingNumber      []int32   `protobuf:"varint,3,rep,packed,name=ringNumber,proto3" json:"ringNumber,omitempty"`
	ConfigurationId int64     `protobuf:"varint,4,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
}

func (x *PreJoinMessage) Reset() {
	*x = PreJoinMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreJoinMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreJoinMessage) ProtoMessage() {}

func (x *PreJoinMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreJoinMessage.ProtoReflect.Descriptor instead.
func (*PreJoinMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{4}
}

func (x *PreJoinMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *PreJoinMessage) GetNodeId() *NodeId {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *PreJoinMessage) GetRingNumber() []int32 {
	if x != nil {
		return x.RingNumber
	}
	return nil
}

func (x *PreJoinMessage) GetConfigurationId() int64 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

type JoinMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          *Endpoint `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	NodeId          *NodeId   `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	RingNumber      []int32   `protobuf:"varint,3,rep,packed,name=ringNumber,proto3" json:"ringNumber,omitempty"`
	ConfigurationId int64     `protobuf:"varint,4,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	Metadata        *Metadata `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *JoinMessage) Reset() {
	*x = JoinMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinMessage) ProtoMessage() {}

func (x *JoinMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinMessage.ProtoReflect.Descriptor instead.
func (*JoinMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{5}
}

func (x *JoinMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *JoinMessage) GetNodeId() *NodeId {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *JoinMessage) GetRingNumber() []int32 {
	if x != nil {
		return x.RingNumber
	}
	return nil
}

func (x *JoinMessage) GetConfigurationId() int64 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *JoinMessage) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type JoinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          *Endpoint      `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	StatusCode      JoinStatusCode `protobuf:"varint,2,opt,name=statusCode,proto3,enum=remoting.JoinStatusCode" json:"statusCode,omitempty"`
	ConfigurationId int64          `protobuf:"varint,3,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	Endpoints       []*Endpoint    `protobuf:"bytes,4,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
	Identifiers     []*NodeId      `protobuf:"bytes,5,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
	MetadataKeys    []*Endpoint    `protobuf:"bytes,6,rep,name=metadataKeys,proto3" json:"metadataKeys,omitempty"`
	MetadataValues  []*Metadata    `protobuf:"bytes,7,rep,name=metadataValues,proto3" json:"metadataValues,omitempty"`
}

func (x *JoinResponse) Reset() {
	*x = JoinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinResponse) ProtoMessage() {}

func (x *JoinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinResponse.ProtoReflect.Descriptor instead.
func (*JoinResponse) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{6}
}

func (x *JoinResponse) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *JoinResponse) GetStatusCode() JoinStatusCode {
	if x != nil {
		return x.StatusCode
	}
	return JoinStatusCode_HOSTNAME_ALREADY_IN_RING
}

func (x *JoinResponse) GetConfigurationId() int64 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *JoinResponse) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *JoinResponse) GetIdentifiers() []*NodeId {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *JoinResponse) GetMetadataKeys() []*Endpoint {
	if x != nil {
		return x.MetadataKeys
	}
	return nil
}

func (x *JoinResponse) GetMetadataValues() []*Metadata {
	if x != nil {
		return x.MetadataValues
	}
	return nil
}

type BatchedAlertMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender   *Endpoint       `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Messages []*AlertMessage `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *BatchedAlertMessage) Reset() {
	*x = BatchedAlertMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchedAlertMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchedAlertMessage) ProtoMessage() {}

func (x *BatchedAlertMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchedAlertMessage.ProtoReflect.Descriptor instead.
func (*BatchedAlertMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{7}
}

func (x *BatchedAlertMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *BatchedAlertMessage) GetMessages() []*AlertMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

type AlertMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EdgeSrc         *Endpoint  `protobuf:"bytes,1,opt,name=edgeSrc,proto3" json:"edgeSrc,omitempty"`
	EdgeDst         *Endpoint  `protobuf:"bytes,2,opt,name=edgeDst,proto3" json:"edgeDst,omitempty"`
	EdgeStatus      EdgeStatus `protobuf:"varint,3,opt,name=edgeStatus,proto3,enum=remoting.EdgeStatus" json:"edgeStatus,omitempty"`
	ConfigurationId int64      `protobuf:"varint,4,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	RingNumber      []int32    `protobuf:"varint,5,rep,packed,name=ringNumber,proto3" json:"ringNumber,omitempty"`
	NodeId          *NodeId    `protobuf:"bytes,6,opt,name=nodeId,proto3" json:"nodeId,omitempty"`     // Required only for join protocol
	Metadata        *Metadata  `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"` // Required only for join protocol
}

func (x *AlertMessage) Reset() {
	*x = AlertMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlertMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlertMessage) ProtoMessage() {}

func (x *AlertMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlertMessage.ProtoReflect.Descriptor instead.
func (*AlertMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{8}
}

func (x *AlertMessage) GetEdgeSrc() *Endpoint {
	if x != nil {
		return x.EdgeSrc
	}
	return nil
}

func (x *AlertMessage) GetEdgeDst() *Endpoint {
	if x != nil {
		return x.EdgeDst
	}
	return nil
}

func (x *AlertMessage) GetEdgeStatus() EdgeStatus {
	if x != nil {
		return x.EdgeStatus
	}
	return EdgeStatus_UP
}

func (x *AlertMessage) GetConfigurationId() int64 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *AlertMessage) GetRingNumber() []int32 {
	if x != nil {
		return x.RingNumber
	}
	return nil
}

func (x *AlertMessage) GetNodeId() *NodeId {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *AlertMessage) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{9}
}

type FastRoundPhase2BMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          *Endpoint   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ConfigurationId int64       `protobuf:"varint,2,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	Endpoints       []*Endpoint `protobuf:"bytes,3,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
}

func (x *FastRoundPhase2BMessage) Reset() {
	*x = FastRoundPhase2BMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FastRoundPhase2BMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FastRoundPhase2BMessage) ProtoMessage() {}

func (x *FastRoundPhase2BMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FastRoundPhase2BMessage.ProtoReflect.Descriptor instead.
func (*FastRoundPhase2BMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{10}
}

func (x *FastRoundPhase2BMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *FastRoundPhase2BMessage) GetConfigurationId() int64 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *FastRoundPhase2BMessage) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

// ******* Classic Paxos messages *********
type Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Round     int32 `protobuf:"varint,1,opt,name=round,proto3" json:"round,omitempty"`
	NodeIndex int32 `protobuf:"varint,2,opt,name=nodeIndex,proto3" json:"nodeIndex,omitempty"`
}

func (x *Rank) Reset() {
	*x = Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rank) ProtoMessage() {}

func (x *Rank) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rank.ProtoReflect.Descriptor instead.
func (*Rank) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{11}
}

func (x *Rank) GetRound() int32 {
	if x != nil {
		return x.Round
	}
	return 0
}

func (x *Rank) GetNodeIndex() int32 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

type Phase1AMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          *Endpoint `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ConfigurationId int64     `protobuf:"varint,2,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	Rank            *Rank     `protobuf:"bytes,3,opt,name=rank,proto3" json:"rank,omitempty"`
}

func (x *Phase1AMessage) Reset() {
	*x = Phase1AMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phase1AMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phase1AMessage) ProtoMessage() {}

func (x *Phase1AMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phase1AMessage.ProtoReflect.Descriptor instead.
func (*Phase1AMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{12}
}

func (x *Phase1AMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Phase1AMessage) GetConfigurationId() int64 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *Phase1AMessage) GetRank() *Rank {
	if x != nil {
		return x.Rank
	}
	return nil
}

type Phase1BMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          *Endpoint   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ConfigurationId int64       `protobuf:"varint,2,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	Rnd             *Rank       `protobuf:"bytes,3,opt,name=rnd,proto3" json:"rnd,omitempty"`
	Vrnd            *Rank       `protobuf:"bytes,4,opt,name=vrnd,proto3" json:"vrnd,omitempty"`
	Vval            []*Endpoint `protobuf:"bytes,5,rep,name=vval,proto3" json:"vval,omitempty"`
}

func (x *Phase1BMessage) Reset() {
	*x = Phase1BMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phase1BMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phase1BMessage) ProtoMessage() {}

func (x *Phase1BMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phase1BMessage.ProtoReflect.Descriptor instead.
func (*Phase1BMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{13}
}

func (x *Phase1BMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Phase1BMessage) GetConfigurationId() int64 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *Phase1BMessage) GetRnd() *Rank {
	if x != nil {
		return x.Rnd
	}
	return nil
}

func (x *Phase1BMessage) GetVrnd() *Rank {
	if x != nil {
		return x.Vrnd
	}
	return nil
}

func (x *Phase1BMessage) GetVval() []*Endpoint {
	if x != nil {
		return x.Vval
	}
	return nil
}

type Phase2AMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          *Endpoint   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ConfigurationId int64       `protobuf:"varint,2,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	Rnd             *Rank       `protobuf:"bytes,3,opt,name=rnd,proto3" json:"rnd,omitempty"`
	Vval            []*Endpoint `protobuf:"bytes,5,rep,name=vval,proto3" json:"vval,omitempty"`
}

func (x *Phase2AMessage) Reset() {
	*x = Phase2AMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phase2AMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phase2AMessage) ProtoMessage() {}

func (x *Phase2AMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phase2AMessage.ProtoReflect.Descriptor instead.
func (*Phase2AMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{14}
}

func (x *Phase2AMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Phase2AMessage) GetConfigurationId() int64 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *Phase2AMessage) GetRnd() *Rank {
	if x != nil {
		return x.Rnd
	}
	return nil
}

func (x *Phase2AMessage) GetVval() []*Endpoint {
	if x != nil {
		return x.Vval
	}
	return nil
}

type Phase2BMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender          *Endpoint   `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	ConfigurationId int64       `protobuf:"varint,2,opt,name=configurationId,proto3" json:"configurationId,omitempty"`
	Rnd             *Rank       `protobuf:"bytes,3,opt,name=rnd,proto3" json:"rnd,omitempty"`
	Endpoints       []*Endpoint `protobuf:"bytes,4,rep,name=endpoints,proto3" json:"endpoints,omitempty"`
}

func (x *Phase2BMessage) Reset() {
	*x = Phase2BMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Phase2BMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Phase2BMessage) ProtoMessage() {}

func (x *Phase2BMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Phase2BMessage.ProtoReflect.Descriptor instead.
func (*Phase2BMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{15}
}

func (x *Phase2BMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Phase2BMessage) GetConfigurationId() int64 {
	if x != nil {
		return x.ConfigurationId
	}
	return 0
}

func (x *Phase2BMessage) GetRnd() *Rank {
	if x != nil {
		return x.Rnd
	}
	return nil
}

func (x *Phase2BMessage) GetEndpoints() []*Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

type ConsensusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConsensusResponse) Reset() {
	*x = ConsensusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusResponse) ProtoMessage() {}

func (x *ConsensusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusResponse.ProtoReflect.Descriptor instead.
func (*ConsensusResponse) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{16}
}

// ******* Node Metadata *********
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata map[string][]byte `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{17}
}

func (x *Metadata) GetMetadata() map[string][]byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type LeaveMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender *Endpoint `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *LeaveMessage) Reset() {
	*x = LeaveMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveMessage) ProtoMessage() {}

func (x *LeaveMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveMessage.ProtoReflect.Descriptor instead.
func (*LeaveMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{18}
}

func (x *LeaveMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

type ProbeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  *Endpoint `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Payload [][]byte  `protobuf:"bytes,3,rep,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ProbeMessage) Reset() {
	*x = ProbeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeMessage) ProtoMessage() {}

func (x *ProbeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeMessage.ProtoReflect.Descriptor instead.
func (*ProbeMessage) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{19}
}

func (x *ProbeMessage) GetSender() *Endpoint {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *ProbeMessage) GetPayload() [][]byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ProbeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status NodeStatus `protobuf:"varint,1,opt,name=status,proto3,enum=remoting.NodeStatus" json:"status,omitempty"`
}

func (x *ProbeResponse) Reset() {
	*x = ProbeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rapid_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeResponse) ProtoMessage() {}

func (x *ProbeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rapid_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeResponse.ProtoReflect.Descriptor instead.
func (*ProbeResponse) Descriptor() ([]byte, []int) {
	return file_rapid_proto_rawDescGZIP(), []int{20}
}

func (x *ProbeResponse) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_OK
}

var File_rapid_proto protoreflect.FileDescriptor

var file_rapid_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x72, 0x61, 0x70, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x3a, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0xd6, 0x05, 0x0a, 0x0c, 0x52, 0x61, 0x70, 0x69, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x4a, 0x6f, 0x69,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x6a, 0x6f, 0x69, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x51, 0x0a, 0x13, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x41, 0x6c,
	0x65, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x13, 0x62, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x5d, 0x0a, 0x17, 0x66, 0x61, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x6e,
	0x64, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x46, 0x61, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32,
	0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x17, 0x66, 0x61, 0x73, 0x74,
	0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x62, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x31, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x31, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x31, 0x61,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x31, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65,
	0x31, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x68, 0x61,
	0x73, 0x65, 0x31, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x32, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50,
	0x68, 0x61, 0x73, 0x65, 0x32, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x32, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x42, 0x0a, 0x0e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x32, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x68, 0x61, 0x73, 0x65, 0x32, 0x62, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x98, 0x02, 0x0a,
	0x0d, 0x52, 0x61, 0x70, 0x69, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c,
	0x0a, 0x0c, 0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x6a, 0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b,
	0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x70,
	0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x50, 0x72,
	0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x09, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x65, 0x4a,
	0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x0b, 0x4a,
	0x6f, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf8, 0x02, 0x0a, 0x0c, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a,
	0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x12, 0x36, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4b, 0x65, 0x79,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x3a, 0x0a, 0x0e, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64,
	0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0xc4, 0x02, 0x0a,
	0x0c, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a,
	0x07, 0x65, 0x64, 0x67, 0x65, 0x53, 0x72, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x07, 0x65, 0x64, 0x67, 0x65, 0x53, 0x72, 0x63, 0x12, 0x2c, 0x0a, 0x07, 0x65,
	0x64, 0x67, 0x65, 0x44, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x07, 0x65, 0x64, 0x67, 0x65, 0x44, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x65, 0x64, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0a, 0x65, 0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x69, 0x6e,
	0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xa1, 0x01, 0x0a, 0x17, 0x46, 0x61, 0x73, 0x74, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x32, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65,
	0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x3a, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x8a, 0x01, 0x0a, 0x0e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x31, 0x61, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0xd4, 0x01, 0x0a,
	0x0e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x31, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x03, 0x72, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x03, 0x72, 0x6e, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x76, 0x72, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x04, 0x76, 0x72, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x04, 0x76,
	0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x76,
	0x76, 0x61, 0x6c, 0x22, 0xb0, 0x01, 0x0a, 0x0e, 0x50, 0x68, 0x61, 0x73, 0x65, 0x32, 0x61, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x03,
	0x72, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x03, 0x72, 0x6e, 0x64, 0x12, 0x26,
	0x0a, 0x04, 0x76, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x04, 0x76, 0x76, 0x61, 0x6c, 0x22, 0xba, 0x01, 0x0a, 0x0e, 0x50, 0x68, 0x61, 0x73, 0x65,
	0x32, 0x62, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x03, 0x72, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x03, 0x72, 0x6e,
	0x64, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69,
	0x6e, 0x67, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x3a, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x62, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x3d, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2a, 0x87, 0x01, 0x0a, 0x0e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x48, 0x4f, 0x53, 0x54, 0x4e, 0x41, 0x4d, 0x45,
	0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x55, 0x49, 0x44, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x41, 0x46, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x4a, 0x4f, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44,
	0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53, 0x48, 0x49, 0x50,
	0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04, 0x2a, 0x1e, 0x0a, 0x0a, 0x45,
	0x64, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x55, 0x50, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x2a, 0x27, 0x0a, 0x0a, 0x4e,
	0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x4f, 0x4f, 0x54, 0x53, 0x54, 0x52, 0x41, 0x50, 0x50, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x32, 0x55, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x73, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74,
	0x69, 0x6e, 0x67, 0x2e, 0x52, 0x61, 0x70, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x52, 0x61, 0x70, 0x69,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2a, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x2e, 0x76, 0x72, 0x67, 0x2e, 0x72, 0x61, 0x70, 0x69, 0x64, 0x2e, 0x70, 0x62, 0x42,
	0x08, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x01, 0x5a, 0x0a, 0x2e, 0x3b, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rapid_proto_rawDescOnce sync.Once
	file_rapid_proto_rawDescData = file_rapid_proto_rawDesc
)

func file_rapid_proto_rawDescGZIP() []byte {
	file_rapid_proto_rawDescOnce.Do(func() {
		file_rapid_proto_rawDescData = protoimpl.X.CompressGZIP(file_rapid_proto_rawDescData)
	})
	return file_rapid_proto_rawDescData
}

var file_rapid_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_rapid_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_rapid_proto_goTypes = []interface{}{
	(JoinStatusCode)(0),             // 0: remoting.JoinStatusCode
	(EdgeStatus)(0),                 // 1: remoting.EdgeStatus
	(NodeStatus)(0),                 // 2: remoting.NodeStatus
	(*Endpoint)(nil),                // 3: remoting.Endpoint
	(*RapidRequest)(nil),            // 4: remoting.RapidRequest
	(*RapidResponse)(nil),           // 5: remoting.RapidResponse
	(*NodeId)(nil),                  // 6: remoting.NodeId
	(*PreJoinMessage)(nil),          // 7: remoting.PreJoinMessage
	(*JoinMessage)(nil),             // 8: remoting.JoinMessage
	(*JoinResponse)(nil),            // 9: remoting.JoinResponse
	(*BatchedAlertMessage)(nil),     // 10: remoting.BatchedAlertMessage
	(*AlertMessage)(nil),            // 11: remoting.AlertMessage
	(*Response)(nil),                // 12: remoting.Response
	(*FastRoundPhase2BMessage)(nil), // 13: remoting.FastRoundPhase2bMessage
	(*Rank)(nil),                    // 14: remoting.Rank
	(*Phase1AMessage)(nil),          // 15: remoting.Phase1aMessage
	(*Phase1BMessage)(nil),          // 16: remoting.Phase1bMessage
	(*Phase2AMessage)(nil),          // 17: remoting.Phase2aMessage
	(*Phase2BMessage)(nil),          // 18: remoting.Phase2bMessage
	(*ConsensusResponse)(nil),       // 19: remoting.ConsensusResponse
	(*Metadata)(nil),                // 20: remoting.Metadata
	(*LeaveMessage)(nil),            // 21: remoting.LeaveMessage
	(*ProbeMessage)(nil),            // 22: remoting.ProbeMessage
	(*ProbeResponse)(nil),           // 23: remoting.ProbeResponse
	nil,                             // 24: remoting.Metadata.MetadataEntry
}
var file_rapid_proto_depIdxs = []int32{
	7,  // 0: remoting.RapidRequest.preJoinMessage:type_name -> remoting.PreJoinMessage
	8,  // 1: remoting.RapidRequest.joinMessage:type_name -> remoting.JoinMessage
	10, // 2: remoting.RapidRequest.batchedAlertMessage:type_name -> remoting.BatchedAlertMessage
	22, // 3: remoting.RapidRequest.probeMessage:type_name -> remoting.ProbeMessage
	13, // 4: remoting.RapidRequest.fastRoundPhase2bMessage:type_name -> remoting.FastRoundPhase2bMessage
	15, // 5: remoting.RapidRequest.phase1aMessage:type_name -> remoting.Phase1aMessage
	16, // 6: remoting.RapidRequest.phase1bMessage:type_name -> remoting.Phase1bMessage
	17, // 7: remoting.RapidRequest.phase2aMessage:type_name -> remoting.Phase2aMessage
	18, // 8: remoting.RapidRequest.phase2bMessage:type_name -> remoting.Phase2bMessage
	21, // 9: remoting.RapidRequest.leaveMessage:type_name -> remoting.LeaveMessage
	9,  // 10: remoting.RapidResponse.joinResponse:type_name -> remoting.JoinResponse
	12, // 11: remoting.RapidResponse.response:type_name -> remoting.Response
	19, // 12: remoting.RapidResponse.consensusResponse:type_name -> remoting.ConsensusResponse
	23, // 13: remoting.RapidResponse.probeResponse:type_name -> remoting.ProbeResponse
	3,  // 14: remoting.PreJoinMessage.sender:type_name -> remoting.Endpoint
	6,  // 15: remoting.PreJoinMessage.nodeId:type_name -> remoting.NodeId
	3,  // 16: remoting.JoinMessage.sender:type_name -> remoting.Endpoint
	6,  // 17: remoting.JoinMessage.nodeId:type_name -> remoting.NodeId
	20, // 18: remoting.JoinMessage.metadata:type_name -> remoting.Metadata
	3,  // 19: remoting.JoinResponse.sender:type_name -> remoting.Endpoint
	0,  // 20: remoting.JoinResponse.statusCode:type_name -> remoting.JoinStatusCode
	3,  // 21: remoting.JoinResponse.endpoints:type_name -> remoting.Endpoint
	6,  // 22: remoting.JoinResponse.identifiers:type_name -> remoting.NodeId
	3,  // 23: remoting.JoinResponse.metadataKeys:type_name -> remoting.Endpoint
	20, // 24: remoting.JoinResponse.metadataValues:type_name -> remoting.Metadata
	3,  // 25: remoting.BatchedAlertMessage.sender:type_name -> remoting.Endpoint
	11, // 26: remoting.BatchedAlertMessage.messages:type_name -> remoting.AlertMessage
	3,  // 27: remoting.AlertMessage.edgeSrc:type_name -> remoting.Endpoint
	3,  // 28: remoting.AlertMessage.edgeDst:type_name -> remoting.Endpoint
	1,  // 29: remoting.AlertMessage.edgeStatus:type_name -> remoting.EdgeStatus
	6,  // 30: remoting.AlertMessage.nodeId:type_name -> remoting.NodeId
	20, // 31: remoting.AlertMessage.metadata:type_name -> remoting.Metadata
	3,  // 32: remoting.FastRoundPhase2bMessage.sender:type_name -> remoting.Endpoint
	3,  // 33: remoting.FastRoundPhase2bMessage.endpoints:type_name -> remoting.Endpoint
	3,  // 34: remoting.Phase1aMessage.sender:type_name -> remoting.Endpoint
	14, // 35: remoting.Phase1aMessage.rank:type_name -> remoting.Rank
	3,  // 36: remoting.Phase1bMessage.sender:type_name -> remoting.Endpoint
	14, // 37: remoting.Phase1bMessage.rnd:type_name -> remoting.Rank
	14, // 38: remoting.Phase1bMessage.vrnd:type_name -> remoting.Rank
	3,  // 39: remoting.Phase1bMessage.vval:type_name -> remoting.Endpoint
	3,  // 40: remoting.Phase2aMessage.sender:type_name -> remoting.Endpoint
	14, // 41: remoting.Phase2aMessage.rnd:type_name -> remoting.Rank
	3,  // 42: remoting.Phase2aMessage.vval:type_name -> remoting.Endpoint
	3,  // 43: remoting.Phase2bMessage.sender:type_name -> remoting.Endpoint
	14, // 44: remoting.Phase2bMessage.rnd:type_name -> remoting.Rank
	3,  // 45: remoting.Phase2bMessage.endpoints:type_name -> remoting.Endpoint
	24, // 46: remoting.Metadata.metadata:type_name -> remoting.Metadata.MetadataEntry
	3,  // 47: remoting.LeaveMessage.sender:type_name -> remoting.Endpoint
	3,  // 48: remoting.ProbeMessage.sender:type_name -> remoting.Endpoint
	2,  // 49: remoting.ProbeResponse.status:type_name -> remoting.NodeStatus
	4,  // 50: remoting.MembershipService.sendRequest:input_type -> remoting.RapidRequest
	5,  // 51: remoting.MembershipService.sendRequest:output_type -> remoting.RapidResponse
	51, // [51:52] is the sub-list for method output_type
	50, // [50:51] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_rapid_proto_init() }
func file_rapid_proto_init() {
	if File_rapid_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rapid_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RapidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RapidResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreJoinMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchedAlertMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlertMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FastRoundPhase2BMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phase1AMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phase1BMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phase2AMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Phase2BMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsensusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rapid_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rapid_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*RapidRequest_PreJoinMessage)(nil),
		(*RapidRequest_JoinMessage)(nil),
		(*RapidRequest_BatchedAlertMessage)(nil),
		(*RapidRequest_ProbeMessage)(nil),
		(*RapidRequest_FastRoundPhase2BMessage)(nil),
		(*RapidRequest_Phase1AMessage)(nil),
		(*RapidRequest_Phase1BMessage)(nil),
		(*RapidRequest_Phase2AMessage)(nil),
		(*RapidRequest_Phase2BMessage)(nil),
		(*RapidRequest_LeaveMessage)(nil),
	}
	file_rapid_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*RapidResponse_JoinResponse)(nil),
		(*RapidResponse_Response)(nil),
		(*RapidResponse_ConsensusResponse)(nil),
		(*RapidResponse_ProbeResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rapid_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rapid_proto_goTypes,
		DependencyIndexes: file_rapid_proto_depIdxs,
		EnumInfos:         file_rapid_proto_enumTypes,
		MessageInfos:      file_rapid_proto_msgTypes,
	}.Build()
	File_rapid_proto = out.File
	file_rapid_proto_rawDesc = nil
	file_rapid_proto_goTypes = nil
	file_rapid_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MembershipServiceClient is the client API for MembershipService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MembershipServiceClient interface {
	SendRequest(ctx context.Context, in *RapidRequest, opts ...grpc.CallOption) (*RapidResponse, error)
}

type membershipServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMembershipServiceClient(cc grpc.ClientConnInterface) MembershipServiceClient {
	return &membershipServiceClient{cc}
}

func (c *membershipServiceClient) SendRequest(ctx context.Context, in *RapidRequest, opts ...grpc.CallOption) (*RapidResponse, error) {
	out := new(RapidResponse)
	err := c.cc.Invoke(ctx, "/remoting.MembershipService/sendRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MembershipServiceServer is the server API for MembershipService service.
type MembershipServiceServer interface {
	SendRequest(context.Context, *RapidRequest) (*RapidResponse, error)
}

// UnimplementedMembershipServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMembershipServiceServer struct {
}

func (*UnimplementedMembershipServiceServer) SendRequest(context.Context, *RapidRequest) (*RapidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendRequest not implemented")
}

func RegisterMembershipServiceServer(s *grpc.Server, srv MembershipServiceServer) {
	s.RegisterService(&_MembershipService_serviceDesc, srv)
}

func _MembershipService_SendRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RapidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MembershipServiceServer).SendRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remoting.MembershipService/SendRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MembershipServiceServer).SendRequest(ctx, req.(*RapidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MembershipService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remoting.MembershipService",
	HandlerType: (*MembershipServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sendRequest",
			Handler:    _MembershipService_SendRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rapid.proto",
}
