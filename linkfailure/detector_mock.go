// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/casualjim/go-rapid/linkfailure (interfaces: Detector)

package linkfailure

import (
	context "context"

	node "github.com/casualjim/go-rapid/node"
	remoting "github.com/casualjim/go-rapid/remoting"
	gomock "github.com/golang/mock/gomock"
)

// MockDetector is a mock of Detector interface
type MockDetector struct {
	ctrl     *gomock.Controller
	recorder *MockDetectorMockRecorder
}

// MockDetectorMockRecorder is the mock recorder for MockDetector
type MockDetectorMockRecorder struct {
	mock *MockDetector
}

// NewMockDetector creates a new mock instance
func NewMockDetector(ctrl *gomock.Controller) *MockDetector {
	mock := &MockDetector{ctrl: ctrl}
	mock.recorder = &MockDetectorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockDetector) EXPECT() *MockDetectorMockRecorder {
	return _m.recorder
}

// CheckMonitoree mocks base method
func (_m *MockDetector) CheckMonitoree(_param0 context.Context, _param1 node.Addr) error {
	ret := _m.ctrl.Call(_m, "CheckMonitoree", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckMonitoree indicates an expected call of CheckMonitoree
func (_mr *MockDetectorMockRecorder) CheckMonitoree(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CheckMonitoree", arg0, arg1)
}

// HandleProbe mocks base method
func (_m *MockDetector) HandleProbe(_param0 *remoting.ProbeMessage) *remoting.ProbeResponse {
	ret := _m.ctrl.Call(_m, "HandleProbe", _param0)
	ret0, _ := ret[0].(*remoting.ProbeResponse)
	return ret0
}

// HandleProbe indicates an expected call of HandleProbe
func (_mr *MockDetectorMockRecorder) HandleProbe(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HandleProbe", arg0)
}

// HasFailed mocks base method
func (_m *MockDetector) HasFailed(_param0 node.Addr) bool {
	ret := _m.ctrl.Call(_m, "HasFailed", _param0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// HasFailed indicates an expected call of HasFailed
func (_mr *MockDetectorMockRecorder) HasFailed(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "HasFailed", arg0)
}

// OnMembershipChange mocks base method
func (_m *MockDetector) OnMembershipChange(_param0 []node.Addr) {
	_m.ctrl.Call(_m, "OnMembershipChange", _param0)
}

// OnMembershipChange indicates an expected call of OnMembershipChange
func (_mr *MockDetectorMockRecorder) OnMembershipChange(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "OnMembershipChange", arg0)
}
